{% extends 'micro-post/index.html.twig' %}

{% block title %}Hello BlogController!
{% endblock %}


{% block content %}

	<div class="container mt-5">

		<div class="row">
			<div class="span8">
				<div class="row">
					<div class="span8">
						<h4>
							<strong>
								<a href="#">Title</a>
							</strong>
						</h4>
					</div>
				</div>
				<div class="row">
					<div class="span2">
						<a href="#" class="thumbnail">
							<img src="http://placehold.it/260x180" alt="">
						</a>
					</div>
					<div class="span6">
						<p>
							{{ post.text }}
						</p>
						<p>
							<a class="btn" href="#">Read more</a>
						</p>
					</div>
				</div>
				<div class="row">
					<div class="span8">
						<p></p>
						<p>
							<i class="icon-user"></i>
							by
							<a href="#">John</a>
							|
							<i class="icon-calendar"></i>
							{{ post.time | date }}
							|
							<i class="icon-comment"></i>
							<a href="#">3 Comments</a>
							|
							<i class="icon-share"></i>
							<a href="#">39 Shares</a>
							|
							<i class="icon-tags"></i>
							Tags :
							<a href="#">
								<span class="label label-info">Snipp</span>
							</a>
							<a href="#">
								<span class="label label-info">Bootstrap</span>
							</a>
							<a href="#">
								<span class="label label-info">UI</span>
							</a>
							<a href="#">
								<span class="label label-info">growth</span>
							</a>
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>
	{% set isLiked = post.getLikedBy.contains(app.user) %}
	<div class="pt-2">
		<button style="display: {% if not isLiked %}block{% else %}none{% endif %}" id="like" class="btn btn-outline-secondary btn-sm">Like
			<span class="badge badge-light" id="likes-like">{{  post.getLikedBy.count }}</span>
		</button>
		<button style="display: {% if isLiked %}block{% else %}none{% endif %}" id="unlike" class="btn btn-outline-secondary btn-sm">Unlike
			<span class="badge badge-danger" id="likes-unlike">{{  post.getLikedBy.count }}</span>
		</button>
	</div>
{% endblock %}
{% block javascripts %}
	{{ parent() }}
	<script>
		var likeButton = document.getElementById('like');
var unlikeButton = document.getElementById('unlike');
addOnClick(likeButton, unlikeButton, document.getElementById('likes-unlike'), '{{ path('likes_like', {'id': post.id}) }}');
addOnClick(unlikeButton, likeButton, document.getElementById('likes-like'), '{{ path('likes_unlike', {'id': post.id}) }}');
function switchButtons(button, oppositeButton) {
button.disabled = false;
button.style.display = 'none';
oppositeButton.style.display = 'block';
}
function addOnClick(button, oppositeButton, likeCount, path) {
button.addEventListener('click', function (event){
	{% if not app.user %}
return window.location.replace('{{ path('user_register') }}')
{% endif %}
button.disabled = true;
fetch(path, {'credentials': 'include'}).then(function (response) {
response.json().then(function (json) {
likeCount.innerText = json.count;
switchButtons(button, oppositeButton);
})
}).catch(function () {
switchButtons(button, oppositeButton);
});
event.preventDefault();
});
}
	</script>
{% endblock %}
